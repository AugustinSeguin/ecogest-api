name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/test
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '["test","test"]'
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Summary of register'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: fisher.tiana@example.org
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: fisher.tiana@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/me
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: hokeefe@example.com
        type: string
        enumValues: []
        custom: []
      username:
        name: username
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dgayedqytqa
        type: string
        enumValues: []
        custom: []
      image:
        name: image
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vadeiurrugtobzflfjz
        type: string
        enumValues: []
        custom: []
      badge_id:
        name: badge_id
        description: ''
        required: false
        example: 8
        type: integer
        enumValues: []
        custom: []
      birthdate:
        name: birthdate
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: false
        example: 10/10/2023
        type: string
        enumValues: []
        custom: []
      biography:
        name: biography
        description: ''
        required: false
        example: eaque
        type: string
        enumValues: []
        custom: []
      position:
        name: position
        description: 'Must not be greater than 255 characters.'
        required: false
        example: rnjxnsytbsafvnys
        type: string
        enumValues: []
        custom: []
      is_private:
        name: is_private
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: hokeefe@example.com
      username: dgayedqytqa
      image: vadeiurrugtobzflfjz
      badge_id: 8
      birthdate: 10/10/2023
      biography: eaque
      position: rnjxnsytbsafvnys
      is_private: true
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/me
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{postId}/participants'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the participants of a post'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{postId}/participants'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a participant on a post'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: assumenda
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: assumenda
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_completed:
        name: is_completed
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      is_completed: true
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/posts/{postId}/participants'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: quibusdam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_completed:
        name: is_completed
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      is_completed: true
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{postId}/participants/{userId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        custom: []
      userId:
        name: userId
        description: ''
        required: true
        example: libero
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: eos
      userId: libero
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/posts/{postId}/participants/completed'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{postId}/likes'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Like a post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{postId}/likes'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unlike a post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: repellendus
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: repellendus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{postId}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Comment a post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      postId: ullam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      content: officia
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/posts/comments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit a comment from a post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: quod
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: quod
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      content: officiis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/comments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a comment from a post.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: facere
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: facere
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/posts/completed'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get posts by user id with is_completed true'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: perspiciatis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/posts/in-progress'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get posts by user id with is_completed false / in progress'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/posts/abandoned'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get posts by user id with is_completed false / abandoned'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/posts/next'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get posts by user id with is_completed next'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: placeat
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: placeat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/posts'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all posts by user id'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: true
        example: 3
        type: integer
        enumValues: []
        custom: []
      tag:
        name: tag
        description: ''
        required: false
        example:
          - culpa
        type: 'string[]'
        enumValues: []
        custom: []
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: wsaqjzldujlcyi
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eveniet id quidem occaecati quidem.'
        type: string
        enumValues: []
        custom: []
      image:
        name: image
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fazentinfcnqnhbqon
        type: string
        enumValues: []
        custom: []
      position:
        name: position
        description: 'Must not be greater than 255 characters.'
        required: false
        example: favjzmgdtnjg
        type: string
        enumValues: []
        custom: []
      type:
        name: type
        description: 'Must not be greater than 255 characters.'
        required: true
        example: qtbafwlkupivizou
        type: string
        enumValues: []
        custom: []
      level:
        name: level
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vrjwpdkegirwnkqsxpjpgwowk
        type: string
        enumValues: []
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-10-10T21:29:42'
        type: string
        enumValues: []
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: false
        example: '2074-03-29'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_id: 3
      tag:
        - culpa
      title: wsaqjzldujlcyi
      description: 'Eveniet id quidem occaecati quidem.'
      image: fazentinfcnqnhbqon
      position: favjzmgdtnjg
      type: qtbafwlkupivizou
      level: vrjwpdkegirwnkqsxpjpgwowk
      start_date: '2023-10-10T21:29:42'
      end_date: '2074-03-29'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: quis
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: quis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: harum
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: harum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tag:
        name: tag
        description: ''
        required: false
        example:
          - quis
        type: 'string[]'
        enumValues: []
        custom: []
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: m
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Minus voluptatem neque qui cumque voluptatem.'
        type: string
        enumValues: []
        custom: []
      image:
        name: image
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vxp
        type: string
        enumValues: []
        custom: []
      position:
        name: position
        description: 'Must not be greater than 255 characters.'
        required: false
        example: btxmicbravfs
        type: string
        enumValues: []
        custom: []
      type:
        name: type
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xcos
        type: string
        enumValues: []
        custom: []
      level:
        name: level
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ygubitqsqzfrapjgv
        type: string
        enumValues: []
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-10-10T21:29:42'
        type: string
        enumValues: []
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: false
        example: '2084-02-06'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      tag:
        - quis
      title: m
      description: 'Minus voluptatem neque qui cumque voluptatem.'
      image: vxp
      position: btxmicbravfs
      type: xcos
      level: ygubitqsqzfrapjgv
      start_date: '2023-10-10T21:29:42'
      end_date: '2084-02-06'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: dicta
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/categories-points'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{userId}/categories-points'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: true
        example: sequi
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_id: sequi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/categories-points/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: ipsa
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the categories point.'
        required: true
        example: odio
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: ipsa
      id: odio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{userId}/categories-points/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the categories point.'
        required: true
        example: accusamus
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: sit
      id: accusamus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{userId}/categories-points/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: quod
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the categories point.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: quod
      id: laudantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/trophies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Recover all trophies of a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: nemo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{userId}/trophies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new trophy for user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: eaque
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: eaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_id: eos
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{userId}/trophies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a trophy of a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: eligendi
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the trophy.'
        required: true
        example: qui
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: eligendi
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{userId}/trophies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a trophy of a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: fugiat
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the trophy.'
        required: true
        example: aut
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: fugiat
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: false
        example: 16
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      category_id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{userId}/trophies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a trophy of a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: iure
        type: string
        enumValues: []
        custom: []
      id:
        name: id
        description: 'The ID of the trophy.'
        required: true
        example: officiis
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      userId: iure
      id: officiis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
